# ./pyproject.toml
[project]
name = "svy-io"
version = "0.0.1a"
license = { file = "LICENSE" }
description = "Fast SPSS/SAS/Stata readers for Polars with haven-like semantics"
classifiers = [
  "License :: OSI Approved :: MIT License",
]
requires-python = ">=3.11"
dependencies = ["polars>=1.4.0", "pyarrow>=15"]

[build-system]
requires = ["maturin>=1.5,<2.0"]
build-backend = "maturin"

[tool.maturin]
bindings = "pyo3"
module-name = "svy_io.svyreadstat_rs"
manifest-path = "native/svyreadstat_rs/Cargo.toml"
python-source = "python"
python-packages = ["svy_io"]
features = []

[dependency-groups]
dev = [
    "maturin>=1.9.4",
    "pytest>=8.4.2",
    "pytest-benchmark>=4.0.0", # Added for performance benchmarking
    "pytest-cov>=6.0.0", # Optional: coverage reporting
]

[tool.pytest.ini_options]
addopts = "--import-mode=importlib"
testpaths = ["tests"]

# Benchmark configuration
[tool.pytest-benchmark]
# Only run benchmarks when --benchmark-only is specified
disable_gc = true
min_rounds = 5
warmup = true
warmup_iterations = 2

[tool.ruff]
line-length = 99
target-version = "py313"
src = ["src", "tests"]
exclude = [".venv", "build", "dist"]

[tool.ruff.lint]
select = ["D", "E", "F", "W", "I001"]
ignore = ["D", "E501"]  # for development we can ignore the docs
exclude = [".venv", "tests"]

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["svy"]
known-third-party = [
    "numpy",
    "pandas",
    "polars",
]
lines-after-imports = 2
lines-between-types = 1

[tool.ty.rules]
unused-ignore-comment = "ignore"
division-by-zero = "error"

[tool.ty.environment]
python = "./.venv"
