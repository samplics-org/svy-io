name: build
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-wheels:
    name: Wheels (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Build separate mac wheels instead of --universal2
        os: [ubuntu-22.04, macos-13, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive # <-- pull ReadStat sources

      - name: Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # libclang for bindgen (Windows)
      - name: Install LLVM (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: choco install -y llvm

      # Build wheels (pass vendored!)
      - name: Build wheels (maturin)
        uses: PyO3/maturin-action@v1
        env:
          # Windows: tell bindgen where libclang.dll lives
          LIBCLANG_PATH: ${{ runner.os == 'Windows' && 'C:\\Program Files\\LLVM\\bin' || '' }}
        with:
          command: build
          args: >-
            --release
            --out dist
            --features vendored
          # Use a modern manylinux image; weâ€™ll install clang inside it
          manylinux: "2_28"
          sccache: true
          before-script-linux: |
            set -eux
            # Install clang/llvm so bindgen can find libclang.so
            (dnf -y install clang llvm-devel || yum -y install clang llvm-devel)
            # Best-effort export; maturin runs in same shell, so this persists
            if command -v ldconfig >/dev/null; then
              export LIBCLANG_PATH="$(dirname "$(ldconfig -p | grep -m1 libclang.so | awk '{print $4}')")"
            fi

      - name: Show wheels
        run: ls -lh dist

      - name: Verify import
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install dist/*.whl
          python - <<'PY'
          import svy_io, svy_io.svyreadstat_rs as _m
          print("OK:", svy_io.__name__, getattr(svy_io, "__version__", "n/a"))
          PY

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: dist/*.whl

  sdist:
    name: Source dist
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive # <-- include ReadStat in sdist
      - uses: dtolnay/rust-toolchain@stable
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          manylinux: "2_28"
      - name: Show sdist
        run: ls -lh dist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [build-wheels, sdist]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    permissions:
      id-token: write # OIDC Trusted Publishing
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
      - name: Upload (PyPI)
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --skip-existing dist/*
